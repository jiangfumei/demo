
server:
  port: 6666

# 配置文件加密key
jasypt:
  encryptor:
    password: demo

# Swagger界面内容配置
swagger:
  title: Demo  API接口文档
  Description: Demo Api Documentation
  version: 1.0.0
  termOfServiceUrl: http://jiangfumei.github.io
  contract:
    name: jiangfumei
    url: http://jiangfumei.github.io
    email: 2515651182@qq.com

spring:
  # 数据源
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/demo?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    # Jasypt加密 可到common-utils中找到JasyptUtil加解密工具类生成加密结果 格式为ENC(加密结果)
    password: root
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.jdbc.Driver
    logSlowSql: true

    # Druid 连接池配置
    # 初始化大小，最小，最大
    platform: mysql
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT1FROMDUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true

    # Druid WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
    web-stat-filter:
      enabled: true
      url-pattern: /*
      #exclusions: *.gif,*.png,*.jpg,*.html,*.js,*.css,*.ico,/druid/*

    # Druid StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
    stat-view-servlet:
      # 默认为true 内置监控页面首页、druid/index.xml
      enabled: true
      url-pattern: /druid/*
      # 允许清空统计数据
      reset-enable: true
      login-username: root
      login-password: root
      #IP白名单 多个逗号分割
      allow:
      #IP黑名单
      deny:


  jpa:
    show-sql: true
    # 自动生成表结构
    generate-ddl: true
    hibernate:
      ddl-auto: none
  # Redis
  redis:
    host: 47.94.235.166
    password: jfm666
    #数据库索引  默认为0
    database: 1
    port: 6379
    timeout: 3000
  # Elasticsearch
  data:
    elasticsearch:
      cluster-nodes: 39.105.223.19:9200


# Mybaits-plus
mybatis-plus:
  # 放在resource目录 classpath:/mybaits/*Mapper.xml
  mapper-locations: classpath:/mybaits/*Mapper.xml
  # 实体扫描，多个package用逗号或分号分隔
  type-aliases-package: com.jfmlc.demo.*.*.domain
  type-enums-package: com.jfmlc.demo.*.*.domain
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 2
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
    #序列接口实现类配置
    #key-generator: com.baomidou.springboot.xxx
    #逻辑删除配置（下面3个配置）
    logic-delete-value: 0
    logic-not-delete-value: 1
    #自定义SQL注入器
    #sql-injector: com.baomidou.mybatisplus.mybaits.LogicSqlInjector
    # sql 解析缓存，开启后多租户 @SqlParser 注解生效
    sql-parser-cache: true
    #自定义填充策略接口实现
    #meta-object-handler: com.baomidou.springboot.xxx
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false

demo:
  # ES
  elasticsearch:
    nodeClient: 127.0.0.1:9200
  # 日志记录方式 true使用Elasticsearch记录 false记录至数据库中
  logRecord:
    es: false

# 日志
logging:
  file: demo-logs/demo.log
